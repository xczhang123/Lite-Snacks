/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package assignment2;

import assignment2.backend.*;
import assignment2.model.*;

import java.util.List;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;

class SnackTest {

    private SnackDB db;

    @BeforeEach
    public void setup() {
        db = new SnackDB();
    }

    /*
    * Test the getter and setter for Snack
    */
    @Test
    void SnackTest() {
        Snack snack = new Snack(1);
        Snack snack2 = new Snack(1, "Mineral Water", "Drinks", 7, 3.6f, 1001, "");
        assertEquals( 1, snack.rollnoProperty().get());
        assertEquals( 1, snack.getRollno());
        snack.setName("Mineral Water");
        assertEquals("Mineral Water", snack.nameProperty().get());
        assertEquals("Mineral Water", snack.getName());
        snack.setPrice(3.6f);
        assertEquals( 3.6f, snack.priceProperty().get());
        assertEquals( 3.6f, snack.getPrice());
        snack.setQuantity(7);
        assertEquals( 7, snack.quantityProperty().get());
        assertEquals( 7, snack.getQuantity());
        snack.setCategory("Drinks");
        assertEquals( "Drinks", snack.categoryProperty().get());
        assertEquals( "Drinks", snack.getCategory());
        snack.setCode(1001);
        assertEquals( 1001, snack.codeProperty().get());
        assertEquals( 1001, snack.getCode());
    }

    /*
    * Test get item detail methods in database
    * both invalid and valid rollno
    */
    @Test
    void getDetailTest(){
        Snack snack = new Snack(17, "Test item 1", "Test", 5, 4.0f, 2001, "");
        db.update(snack);
        assertEquals(snack.getQuantity(), db.getQuantity(17));
        assertEquals(snack.getPrice(), db.getPrice(17));
        assertEquals(0f, db.getPrice(100));
        assertEquals(0, db.getQuantity(100));
        assertEquals("Test item 3", db.getName(19));
        assertEquals("", db.getName(100));
    }

    /*
    * Test get items from database method
    */
    @Test
    void getViewTest(){
        List<Snack> snacks= db.view("Test");
        assertEquals(5, db.getQuantity(17));
        assertEquals(7, db.getQuantity(18));
        assertEquals(15, db.getQuantity(19));
    }

    /*
    * buy item
    */
    @Test
    void buyTest(){
        List<Snack> snacks= db.view("Test");
        Snack snack = new Snack(18, "Test item 2", "Test", 7, 4.0f, 2002, "");
        db.update(snack);
        db.buy(18,3);
        assertEquals(4, db.getQuantity(18));
        db.update(snack);
    }

    /*
    * Test get items from database method
    */
    @Test
    void toStringTest(){
        List<Snack> snacks= db.view("Test");
        String expected = Integer.toString(snacks.get(0).getCode()) + ',' +
                                          snacks.get(0).getName() + ',' +
                                          snacks.get(0).getCategory() + ',' +
                                          snacks.get(0).getQuantity() + ',' +
                                          snacks.get(0).getPrice();
        assertEquals(expected, snacks.get(0).toString());
    }

    /*
    * Test get items from database method
    */
    @Test
    void getRecentTest(){
        List<Snack> snacks= db.getRecent(5);
        Snack snack = new Snack(17, "Test item 1", "Test", 1, 4.0f, 2001, "");
        String expected = Integer.toString(snack.getCode()) + ',' +
                                          snack.getName() + ',' +
                                          snack.getCategory() + ',' +
                                          snack.getQuantity() + ',' +
                                          snack.getPrice();
        assertEquals(expected, snacks.get(0).toString());
    }

}
